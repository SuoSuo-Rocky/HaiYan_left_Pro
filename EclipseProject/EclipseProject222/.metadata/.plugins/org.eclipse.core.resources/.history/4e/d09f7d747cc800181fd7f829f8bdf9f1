package com.example.digtubedemo1;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;

import android.content.Context;
import android.os.AsyncTask;
import android.util.Log;
import android.widget.TextView;
import android.widget.Toast;



public class ConnectTask extends AsyncTask<Void,Void, Void> {
	
	private Context context;
	private TextView view;
	
	private Socket socket=null;
	 InetSocketAddress address=null;
	 InputStream in=null;
	 OutputStream out=null;
	
	private boolean STATE=false;
	public ConnectTask(Context context,TextView view) {
		this.context=context;
		this.view=view;
	}

	@Override
	protected void onPreExecute() {
		view.setText("正在连接！");
	}

	@Override
	protected Void doInBackground(Void... params) {
		socket=new Socket();
		address=new InetSocketAddress(Constant.IP,Constant.port);
		try {
			//Toast.makeText(ConnectTask.class,"开始连接",Toast.LENGTH_SHORT).show();
			//Thread.sleep(1000);
			 socket.connect(address,300);
			 Log.i("shi","socket.isConnected()==="+socket.isConnected());
			// Toast.makeText(context,"已连接完",Toast.LENGTH_SHORT).show();
			if(socket.isConnected()){
				setSTATE(true);
				 in=socket.getInputStream();
				 out=socket.getOutputStream();
				 Log.i("shi","获得输入流和输出流");
			 }else{
				 view.setText("连接失败！");
				 setSTATE(false);
			 }
			publishProgress();
			Thread.sleep(200);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
		return null;
	}


	@Override
	protected void onProgressUpdate(Void... values) {
		if(STATE){
			view.setText("连接成功");
		}else{
			view.setText("连接失败");
		}
		
		
		
	}

	public void setSTATE(boolean sTATE) {
		STATE = sTATE;
	}
	public boolean getSTATE() {
		return STATE;

	}
	public InputStream getInputStream() {
		return in;
	}
	public OutputStream getOutputStream() {
		return out;
	}
	public Socket getSocket() {
		return socket;
	}
	
	


}
